swagger: "2.0"
x-global-options:
  go_package: financial
info:
  description: "Shows the trajectory of accounts in relation to goal."
  version: "0.0.0"
  title: "Financial Planning Calculator"
host: "localhost:3000"
basePath: "/svc/v1"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      description: Create a new user.
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/PostUserData'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/UserResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
    get:
      description: Get a new user.
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/GetUserData'
      responses:
        200:
          description: Found user
          schema:
            $ref: '#/definitions/UserResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
  /user/calculate:
    get:
      description: Calculate for the current user.
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CalculateResponse"
  /account:
    post:
      description: Create an account.
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/Account'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/PostAccountResponse'
  /accounts:
    get:
      description: Get accounts
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/GetAccountsData'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/GetAccountsResponse'
definitions:
  PostUserData:
    type: object
    properties:
      Email:
        type: string
  GetUserData:
    type: object
    properties:
      Email:
        type: string
  UserResponse:
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Email:
        type: string
  PostAccountResponse:
    type: object
    properties:
      Id:
        type: integer
        format: int64
  GetAccountsData:
    type: object
    properties:
      UserId:
        type: integer
        format: int64
  GetAccountsResponse:
    type: object
    properties:
      Accounts:
        type: array
        items:
          $ref: '#/definitions/Account'
  Mode:
    type: string
    description: "The mode determines how contributions work for the account. A debt account contribution will remove money from the balance. An investment account contribution will add money to the balance. This value also affects how interest is calculated."
    enum:
      - INVESTMENTS
      - DEBT
  CalculateResponse:
    type: object
    properties:
      Periods:
        $ref: '#/definitions/Periods'
  Periods:
    type: array
    items:
      $ref: '#/definitions/Period' 
  Period:
    type: object
    properties:
      Accounts:
        $ref: '#/definitions/Accounts'
  Accounts:
    type: array
    items:
        $ref: '#/definitions/Account'
  Account:
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Name:
        type: string
      Mode:
        $ref: '#/definitions/Mode'
      Balance:
        type: number
        format: double
        description: "The Balance of the account. 45.05"
      InterestRate:
        type: number
        format: double
        description: "The interest rate of hte account. %5.5 is 0.055."
      AddInterestEveryNPeriods:
        type: number
        format: int64
        description: "Not all accounts accrue interest at the same rate. Some may accrue interest once per year, once per month, etc. Since we use periods we need to know how many periods before interest is calculated. So, on a bi-weekly paycheck you might choose to view interest every 2 periods."
      UserId:
        type: integer
        format: int64
  Error:
    type: object
    properties:
      Message:
        type: string 
